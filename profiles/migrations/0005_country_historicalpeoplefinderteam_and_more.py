# Generated by Django 5.1.5 on 2025-01-30 16:02

import uuid

import django.db.models.deletion
import django_chunk_upload_handlers.clam_av
import simple_history.models
from django.conf import settings
from django.db import migrations, models

import core.models
import profiles.models.peoplefinder


class Migration(migrations.Migration):

    dependencies = [
        (
            "profiles",
            "0004_rename_preferred_email_historicalprofile_primary_email_and_more",
        ),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Country",
            fields=[
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "reference_id",
                    models.CharField(
                        max_length=11,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Reference ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                (
                    "type",
                    models.CharField(
                        choices=[("country", "Country"), ("territory", "Territory")],
                        max_length=9,
                    ),
                ),
                (
                    "iso_1_code",
                    models.CharField(
                        max_length=3, unique=True, verbose_name="ISO 1 Code"
                    ),
                ),
                (
                    "iso_2_code",
                    models.CharField(
                        max_length=2, unique=True, verbose_name="ISO 2 Code"
                    ),
                ),
                (
                    "iso_3_code",
                    models.CharField(
                        max_length=3, unique=True, verbose_name="ISO 3 Code"
                    ),
                ),
                ("overseas_region", models.CharField(max_length=40, null=True)),
                ("start_date", models.DateField(null=True)),
                ("end_date", models.DateField(null=True)),
            ],
            options={
                "verbose_name_plural": "countries",
            },
        ),
        migrations.CreateModel(
            name="HistoricalPeopleFinderTeam",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("slug", models.SlugField(max_length=130)),
                (
                    "name",
                    models.CharField(
                        help_text="The full name of this team (e.g. Digital, Data and Technology)",
                        max_length=255,
                        verbose_name="Team name (required)",
                    ),
                ),
                (
                    "abbreviation",
                    models.CharField(
                        blank=True,
                        help_text="A short form of the team name, up to 10 characters. For example DDaT.",
                        max_length=20,
                        null=True,
                        verbose_name="Team acronym or initials",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        default=None,
                        help_text="What does this team do? Use Markdown to add lists and links. Enter up to 1500 characters.",
                        null=True,
                        verbose_name="Team description",
                    ),
                ),
                (
                    "leaders_ordering",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("alphabetical", "Alphabetical"),
                            ("custom", "Custom"),
                        ],
                        default="alphabetical",
                        max_length=12,
                    ),
                ),
                (
                    "cost_code",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="Financial cost code associated with this team",
                    ),
                ),
                (
                    "team_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Standard", "Standard"),
                            ("Directorate", "Directorate"),
                            ("Portfolio", "Portfolio"),
                        ],
                        default="Standard",
                        max_length=20,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical people finder team",
                "verbose_name_plural": "historical people finder teams",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="PeopleFinderProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "slug",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "first_name",
                    models.CharField(
                        help_text="If you enter a preferred name below, this name will be hidden to others",
                        max_length=200,
                    ),
                ),
                (
                    "preferred_first_name",
                    models.CharField(
                        blank=True,
                        help_text="This name appears on your profile. Colleagues can search for you using either of your first names",
                        max_length=200,
                        null=True,
                    ),
                ),
                ("last_name", models.CharField(max_length=200)),
                ("pronouns", models.CharField(blank=True, max_length=40, null=True)),
                (
                    "name_pronunciation",
                    models.CharField(
                        blank=True,
                        help_text="A phonetic representation of your name<br><a class='govuk-link' href='/news-and-views/say-my-name/' target='_blank' rel='noreferrer'>Tips for writing your name phonetically</a>",
                        max_length=200,
                        null=True,
                        verbose_name="How to pronounce your full name",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="We will send Digital Workspace notifications to this email",
                        max_length=254,
                        verbose_name="How we contact you",
                    ),
                ),
                (
                    "contact_email",
                    models.EmailField(
                        blank=True,
                        help_text="The work email you want people to contact you on",
                        max_length=254,
                        null=True,
                        verbose_name="Email address",
                    ),
                ),
                (
                    "primary_phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Enter the country's dialling code in place of the first 0. The UK's dialling code is +44.",
                        max_length=42,
                        null=True,
                        verbose_name="Phone number",
                    ),
                ),
                (
                    "secondary_phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Enter the country's dialling code in place of the first 0. The UK's dialling code is +44.",
                        max_length=160,
                        null=True,
                        verbose_name="Alternative phone number",
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        max_length=255,
                        null=True,
                        upload_to=profiles.models.peoplefinder.person_photo_path,
                        validators=[
                            django_chunk_upload_handlers.clam_av.validate_virus_check_result
                        ],
                    ),
                ),
                (
                    "photo_small",
                    models.ImageField(
                        blank=True,
                        max_length=255,
                        null=True,
                        upload_to=profiles.models.peoplefinder.person_photo_small_path,
                        validators=[
                            django_chunk_upload_handlers.clam_av.validate_virus_check_result
                        ],
                    ),
                ),
                (
                    "grade",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("FCO S1", "Fco S1"),
                            ("FCO S2", "Fco S2"),
                            ("FCO S3", "Fco S3"),
                            ("Administrative assistant (AA)", "Admin Assistant"),
                            ("Administrative officer (AO/A2)", "Admin Officer"),
                            ("Executive officer (EO/B3)", "Executive Officer"),
                            (
                                "Higher executive officer (HEO/C4)",
                                "Higher Executive Officer",
                            ),
                            (
                                "Senior executive officer (SEO/C5)",
                                "Senior Executive Officer",
                            ),
                            ("Grade 7 (G7/D6)", "Grade 7"),
                            ("Grade 6 (G6/D7)", "Grade 6"),
                            ("Senior civil service 1 (SCS1/SMS1)", "Scs 1"),
                            ("Senior civil service 2 (SCS2/SMS2)", "Scs 2"),
                            ("Senior civil service 3 (SCS3/SMS3)", "Scs 3"),
                            ("Senior civil service 4 (SCS4/SMS4)", "Scs 4"),
                            ("Fast Stream", "Fast Stream"),
                            ("Fast Track", "Fast Track"),
                            ("Apprentice", "Apprentice"),
                            (
                                "Non graded - special advisor (SPAD)",
                                "Non Graded Special Advisor",
                            ),
                            ("Non graded - contractor", "Non Graded Contractor"),
                            ("Non graded - secondee", "Non Graded Secondee"),
                            ("Non graded - post", "Non Graded Post"),
                        ],
                        max_length=80,
                        null=True,
                    ),
                ),
                (
                    "not_employee",
                    models.BooleanField(
                        default=False,
                        verbose_name="My manager is not listed because I do not work for DBT",
                    ),
                ),
                (
                    "workdays",
                    core.models.ChoiceArrayField(
                        base_field=models.CharField(
                            blank=True,
                            choices=[
                                ("Monday", "Mon"),
                                ("Tuesday", "Tue"),
                                ("Wednesday", "Wed"),
                                ("Thursday", "Thu"),
                                ("Friday", "Fri"),
                                ("Saturday", "Sat"),
                                ("Sunday", "Sun"),
                            ],
                            max_length=80,
                            null=True,
                            verbose_name="Which days do you usually work?",
                        ),
                        size=None,
                    ),
                ),
                (
                    "remote_working",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("office_worker", "Office Worker"),
                            ("remote_worker", "Remote Worker"),
                            ("split", "Split"),
                        ],
                        max_length=80,
                        null=True,
                        verbose_name="Where do you usually work?",
                    ),
                ),
                (
                    "usual_office_days",
                    models.CharField(
                        blank=True,
                        help_text="For example: I usually come in on Mondays and Wednesdays",
                        max_length=200,
                        null=True,
                        verbose_name="What days do you usually come in to the office?",
                    ),
                ),
                (
                    "location_in_building",
                    models.CharField(
                        blank=True,
                        help_text="If you sit in a particular area, you can let colleagues know here",
                        max_length=130,
                        null=True,
                        verbose_name="Location in the building",
                    ),
                ),
                (
                    "international_building",
                    models.CharField(
                        blank=True,
                        help_text="Complete if you work outside the UK",
                        max_length=110,
                        null=True,
                        verbose_name="International location",
                    ),
                ),
                (
                    "professions",
                    core.models.ChoiceArrayField(
                        base_field=models.CharField(
                            blank=True,
                            choices=[
                                (
                                    "Government commercial and contract management",
                                    "Commercial",
                                ),
                                ("Corporate finance profession", "Corp Finance"),
                                (
                                    "Counter-fraud standards and profession",
                                    "Counter Fraud",
                                ),
                                (
                                    "Digital, data and technology profession",
                                    "Digital Data Tech",
                                ),
                                ("Government communication service", "Gov Comms"),
                                ("Government economic service", "Gov Economics"),
                                ("Government finance profession", "Gov Finance"),
                                ("Government IT profession", "Gov It"),
                                (
                                    "Government knowledge and information management profession",
                                    "Gov Knowledge",
                                ),
                                ("Government legal service", "Gov Legal"),
                                (
                                    "Government occupational psychology profession",
                                    "Gov Occupational",
                                ),
                                (
                                    "Government operational research service",
                                    "Gov Operational",
                                ),
                                (
                                    "Government planning inspectors",
                                    "Gov Planning Inspectors",
                                ),
                                (
                                    "Government planning profession",
                                    "Gov Planning Profession",
                                ),
                                ("Government property profession", "Gov Property"),
                                ("Government security profession", "Gov Security"),
                                (
                                    "Government science and engineering profession",
                                    "Gov Science",
                                ),
                                ("Government social research profession", "Gov Social"),
                                (
                                    "Government statistical service profession",
                                    "Gov Statistical",
                                ),
                                ("Government tax profession", "Gov Tax"),
                                ("Government veterinary profession", "Gov Vet"),
                                ("Human resources profession", "Human Resources"),
                                ("Intelligence analysis", "Intelligence Analysis"),
                                ("Internal audit profession", "Internal Audit"),
                                ("Medical profession", "Medical Profession"),
                                (
                                    "Operational delivery profession",
                                    "Operation Delivery",
                                ),
                                ("Policy profession", "Policy Profiession"),
                                ("Procurement profession", "Procurement Profession"),
                                ("Project delivery profession", "Project Delivery"),
                                (
                                    "International trade profession",
                                    "International Trade",
                                ),
                            ],
                            help_text="Select all that apply",
                            verbose_name="What professions do you belong to?",
                        ),
                        size=None,
                    ),
                ),
                (
                    "additional_roles",
                    core.models.ChoiceArrayField(
                        base_field=models.CharField(
                            blank=True,
                            choices=[
                                ("Fire warden", "Fire Warden"),
                                ("First aider", "First Aider"),
                                (
                                    "Mental health first aider",
                                    "Mental Health First Aider",
                                ),
                                ("Mentor", "Mentor"),
                                ("Network lead", "Network Lead"),
                                ("Network deputy lead", "Network Deputy Lead"),
                                ("Cirrus champion", "Cirrus Champion"),
                                (
                                    "Health & wellbeing champion",
                                    "Health Wellbeing Champion",
                                ),
                                ("Fast stream rep", "Fast Stream Rep"),
                                ("Overseas staff rep", "Overseas Staff Rep"),
                                ("Digital champion", "Digital Champion"),
                                ("Information manager", "Information Manager"),
                                (
                                    "Independent panel member",
                                    "Independent Panel Member",
                                ),
                                (
                                    "Divisional security coordinator",
                                    "Divisional Security Coordinator",
                                ),
                                ("DDaT champion", "Ddat Champion"),
                                ("Honours champion", "Honours Champion"),
                            ],
                            help_text="Select all that apply",
                            verbose_name="Do you have any additional roles or responsibilities?",
                        ),
                        size=None,
                    ),
                ),
                (
                    "other_additional_roles",
                    models.CharField(
                        blank=True,
                        help_text="Enter your roles or responsibilities. Use a comma to separate them.",
                        max_length=400,
                        null=True,
                        verbose_name="What other additional roles or responsibilities do you have?",
                    ),
                ),
                (
                    "key_skills",
                    core.models.ChoiceArrayField(
                        base_field=models.CharField(
                            blank=True,
                            choices=[
                                ("Asset management", "Asset Management"),
                                ("Assurance", "Assurance"),
                                ("Benefits realisation", "Benefits Realisation"),
                                ("Change management", "Change Management"),
                                ("Coaching", "Coaching"),
                                ("Commercial specialist", "Commercial Specialist"),
                                ("Commissioning", "Commissioning"),
                                ("Contract management", "Contract Management"),
                                ("Credit risk analysis", "Credit Risk Analysis"),
                                ("Customer service", "Customer Service"),
                                ("Digital", "Digital"),
                                (
                                    "Digital Workspace publisher",
                                    "Digital Workspace Publisher",
                                ),
                                ("Economist", "Economist"),
                                ("Financial reporting", "Financial Reporting"),
                                ("Graphic Design", "Graphic Design"),
                                ("HR", "Hr"),
                                ("Income generation", "Income Generation"),
                                ("Information management", "Information Management"),
                                ("Interviewing", "Interviewing"),
                                ("IT", "It"),
                                ("Law", "Law"),
                                ("Lean/ Six sigma", "Lean"),
                                ("Line management", "Line Management"),
                                ("Media trained", "Media Trained"),
                                ("Mentoring", "Mentoring"),
                                ("Policy design", "Policy Design"),
                                ("Policy implementation", "Policy Implementation"),
                                ("Presenting", "Presenting"),
                                ("Project delivery", "Project Delivery"),
                                ("Project management", "Project Management"),
                                ("Property / Estates", "Property Estates"),
                                ("Research - operational", "Research Operational"),
                                ("Research - economic", "Research Economic"),
                                ("Research - statistical", "Research Statistical"),
                                ("Research - social", "Research Social"),
                                ("Risk management", "Risk Management"),
                                ("Security", "Security"),
                                ("Service and process design", "Service Design"),
                                (
                                    "Skills and capability management",
                                    "Skills And Capability",
                                ),
                                ("Sponsorship and partnerships", "Sponsorship"),
                                ("Stakeholder management", "Stakeholder Management"),
                                ("Statistics", "Statistics"),
                                ("Strategy", "Strategy"),
                                ("Submission writing", "Submission Writing"),
                                ("Talent Management", "Talent Management"),
                                ("Tax", "Tax"),
                                ("Training", "Training"),
                                ("Underwriting", "Underwriting"),
                                ("User research", "User Research"),
                                ("Valuation", "Valution"),
                                (
                                    "Working with Devolved Administrations",
                                    "Working With Devolved Admin",
                                ),
                                ("Working with Ministers", "Working With Ministers"),
                                (
                                    "Working with other government departments",
                                    "Working With Govt Depts",
                                ),
                            ],
                            help_text="Select all that apply",
                            verbose_name="What are your skills?",
                        ),
                        size=None,
                    ),
                ),
                (
                    "other_key_skills",
                    models.CharField(
                        blank=True,
                        help_text="Enter your skills. Use a comma to separate them.",
                        max_length=700,
                        null=True,
                        verbose_name="What other skills do you have?",
                    ),
                ),
                (
                    "learning_interests",
                    core.models.ChoiceArrayField(
                        base_field=models.CharField(
                            blank=True,
                            choices=[
                                ("Work shadowing", "Shadowing"),
                                ("Mentoring", "Mentoring"),
                                ("Research", "Research"),
                                ("Overseas posts", "Overseas Posts"),
                                ("Secondment", "Secondment"),
                                ("Parliamentary work", "Parliamentary Work"),
                                ("Ministerial submissions", "Ministerial Submissions"),
                                ("Coding", "Coding"),
                            ],
                            help_text="Select all that apply",
                            verbose_name="What are your learning and development interests?",
                        ),
                        size=None,
                    ),
                ),
                (
                    "other_learning_interests",
                    models.CharField(
                        blank=True,
                        help_text="Enter your interests. Use a comma to separate them.",
                        max_length=255,
                        null=True,
                        verbose_name="What other learning and development interests do you have?",
                    ),
                ),
                (
                    "fluent_languages",
                    models.CharField(
                        blank=True,
                        help_text="Use a comma to separate the languages. For example: French, Polish, Ukrainian",
                        max_length=200,
                        null=True,
                        verbose_name="Which languages are you fluent in?",
                    ),
                ),
                (
                    "intermediate_languages",
                    models.CharField(
                        blank=True,
                        help_text="These are languages you speak and write but are not fluent in",
                        max_length=200,
                        null=True,
                        verbose_name="Which other languages do you speak?",
                    ),
                ),
                (
                    "previous_experience",
                    models.TextField(
                        blank=True,
                        help_text="List where you have worked before your current role",
                        null=True,
                        verbose_name="Previous positions I have held",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("became_inactive", models.DateTimeField(blank=True, null=True)),
                ("edited_or_confirmed_at", models.DateTimeField()),
                ("login_count", models.IntegerField(default=0)),
                ("profile_completion", models.IntegerField(default=0)),
                (
                    "ical_token",
                    models.CharField(
                        blank=True,
                        max_length=80,
                        null=True,
                        verbose_name="Individual token for iCal feeds",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        default="CTHMTC00260",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="profiles.country",
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="direct_reports",
                        to="profiles.peoplefinderprofile",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PeopleFinderTeam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slug", models.SlugField(max_length=130, unique=True)),
                (
                    "name",
                    models.CharField(
                        help_text="The full name of this team (e.g. Digital, Data and Technology)",
                        max_length=255,
                        verbose_name="Team name (required)",
                    ),
                ),
                (
                    "abbreviation",
                    models.CharField(
                        blank=True,
                        help_text="A short form of the team name, up to 10 characters. For example DDaT.",
                        max_length=20,
                        null=True,
                        verbose_name="Team acronym or initials",
                    ),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        default=None,
                        help_text="What does this team do? Use Markdown to add lists and links. Enter up to 1500 characters.",
                        null=True,
                        verbose_name="Team description",
                    ),
                ),
                (
                    "leaders_ordering",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("alphabetical", "Alphabetical"),
                            ("custom", "Custom"),
                        ],
                        default="alphabetical",
                        max_length=12,
                    ),
                ),
                (
                    "cost_code",
                    models.CharField(
                        blank=True,
                        max_length=20,
                        null=True,
                        verbose_name="Financial cost code associated with this team",
                    ),
                ),
                (
                    "team_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Standard", "Standard"),
                            ("Directorate", "Directorate"),
                            ("Portfolio", "Portfolio"),
                        ],
                        default="Standard",
                        max_length=20,
                    ),
                ),
            ],
            options={
                "indexes": [
                    models.Index(fields=["slug"], name="profiles_pe_slug_308d3f_idx")
                ],
            },
        ),
        migrations.CreateModel(
            name="HistoricalPeopleFinderTeamTree",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("depth", models.SmallIntegerField()),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "child",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="profiles.peoplefinderteam",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="profiles.peoplefinderteam",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical people finder team tree",
                "verbose_name_plural": "historical people finder team trees",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPeopleFinderProfileTeam",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "job_title",
                    models.CharField(
                        help_text="Enter your role in this team", max_length=255
                    ),
                ),
                ("head_of_team", models.BooleanField(default=False)),
                ("leaders_position", models.SmallIntegerField(null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "peoplefinder_profile",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="profiles.peoplefinderprofile",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="profiles.peoplefinderteam",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical people finder profile team",
                "verbose_name_plural": "historical people finder profile teams",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="UkStaffLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
                ("modified", models.DateTimeField(auto_now=True)),
                ("is_active", models.BooleanField(default=True)),
                ("code", models.CharField(max_length=255, unique=True)),
                ("name", models.CharField(max_length=255)),
                ("city", models.CharField(max_length=255)),
                ("organisation", models.CharField(max_length=255)),
                ("building_name", models.CharField(blank=True, max_length=255)),
            ],
            options={
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["code"], name="profiles_uk_code_56d730_idx")
                ],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("code",), name="unique_location_code"
                    )
                ],
            },
        ),
        migrations.AddField(
            model_name="peoplefinderprofile",
            name="uk_office_location",
            field=models.ForeignKey(
                blank=True,
                help_text="Your base location as per your contract",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="+",
                to="profiles.ukstafflocation",
                verbose_name="What is your office location?",
            ),
        ),
        migrations.CreateModel(
            name="HistoricalPeopleFinderProfile",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "slug",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "first_name",
                    models.CharField(
                        help_text="If you enter a preferred name below, this name will be hidden to others",
                        max_length=200,
                    ),
                ),
                (
                    "preferred_first_name",
                    models.CharField(
                        blank=True,
                        help_text="This name appears on your profile. Colleagues can search for you using either of your first names",
                        max_length=200,
                        null=True,
                    ),
                ),
                ("last_name", models.CharField(max_length=200)),
                ("pronouns", models.CharField(blank=True, max_length=40, null=True)),
                (
                    "name_pronunciation",
                    models.CharField(
                        blank=True,
                        help_text="A phonetic representation of your name<br><a class='govuk-link' href='/news-and-views/say-my-name/' target='_blank' rel='noreferrer'>Tips for writing your name phonetically</a>",
                        max_length=200,
                        null=True,
                        verbose_name="How to pronounce your full name",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="We will send Digital Workspace notifications to this email",
                        max_length=254,
                        verbose_name="How we contact you",
                    ),
                ),
                (
                    "contact_email",
                    models.EmailField(
                        blank=True,
                        help_text="The work email you want people to contact you on",
                        max_length=254,
                        null=True,
                        verbose_name="Email address",
                    ),
                ),
                (
                    "primary_phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Enter the country's dialling code in place of the first 0. The UK's dialling code is +44.",
                        max_length=42,
                        null=True,
                        verbose_name="Phone number",
                    ),
                ),
                (
                    "secondary_phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Enter the country's dialling code in place of the first 0. The UK's dialling code is +44.",
                        max_length=160,
                        null=True,
                        verbose_name="Alternative phone number",
                    ),
                ),
                (
                    "photo",
                    models.TextField(
                        blank=True,
                        max_length=255,
                        null=True,
                        validators=[
                            django_chunk_upload_handlers.clam_av.validate_virus_check_result
                        ],
                    ),
                ),
                (
                    "photo_small",
                    models.TextField(
                        blank=True,
                        max_length=255,
                        null=True,
                        validators=[
                            django_chunk_upload_handlers.clam_av.validate_virus_check_result
                        ],
                    ),
                ),
                (
                    "grade",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("FCO S1", "Fco S1"),
                            ("FCO S2", "Fco S2"),
                            ("FCO S3", "Fco S3"),
                            ("Administrative assistant (AA)", "Admin Assistant"),
                            ("Administrative officer (AO/A2)", "Admin Officer"),
                            ("Executive officer (EO/B3)", "Executive Officer"),
                            (
                                "Higher executive officer (HEO/C4)",
                                "Higher Executive Officer",
                            ),
                            (
                                "Senior executive officer (SEO/C5)",
                                "Senior Executive Officer",
                            ),
                            ("Grade 7 (G7/D6)", "Grade 7"),
                            ("Grade 6 (G6/D7)", "Grade 6"),
                            ("Senior civil service 1 (SCS1/SMS1)", "Scs 1"),
                            ("Senior civil service 2 (SCS2/SMS2)", "Scs 2"),
                            ("Senior civil service 3 (SCS3/SMS3)", "Scs 3"),
                            ("Senior civil service 4 (SCS4/SMS4)", "Scs 4"),
                            ("Fast Stream", "Fast Stream"),
                            ("Fast Track", "Fast Track"),
                            ("Apprentice", "Apprentice"),
                            (
                                "Non graded - special advisor (SPAD)",
                                "Non Graded Special Advisor",
                            ),
                            ("Non graded - contractor", "Non Graded Contractor"),
                            ("Non graded - secondee", "Non Graded Secondee"),
                            ("Non graded - post", "Non Graded Post"),
                        ],
                        max_length=80,
                        null=True,
                    ),
                ),
                (
                    "not_employee",
                    models.BooleanField(
                        default=False,
                        verbose_name="My manager is not listed because I do not work for DBT",
                    ),
                ),
                (
                    "workdays",
                    core.models.ChoiceArrayField(
                        base_field=models.CharField(
                            blank=True,
                            choices=[
                                ("Monday", "Mon"),
                                ("Tuesday", "Tue"),
                                ("Wednesday", "Wed"),
                                ("Thursday", "Thu"),
                                ("Friday", "Fri"),
                                ("Saturday", "Sat"),
                                ("Sunday", "Sun"),
                            ],
                            max_length=80,
                            null=True,
                            verbose_name="Which days do you usually work?",
                        ),
                        size=None,
                    ),
                ),
                (
                    "remote_working",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("office_worker", "Office Worker"),
                            ("remote_worker", "Remote Worker"),
                            ("split", "Split"),
                        ],
                        max_length=80,
                        null=True,
                        verbose_name="Where do you usually work?",
                    ),
                ),
                (
                    "usual_office_days",
                    models.CharField(
                        blank=True,
                        help_text="For example: I usually come in on Mondays and Wednesdays",
                        max_length=200,
                        null=True,
                        verbose_name="What days do you usually come in to the office?",
                    ),
                ),
                (
                    "location_in_building",
                    models.CharField(
                        blank=True,
                        help_text="If you sit in a particular area, you can let colleagues know here",
                        max_length=130,
                        null=True,
                        verbose_name="Location in the building",
                    ),
                ),
                (
                    "international_building",
                    models.CharField(
                        blank=True,
                        help_text="Complete if you work outside the UK",
                        max_length=110,
                        null=True,
                        verbose_name="International location",
                    ),
                ),
                (
                    "professions",
                    core.models.ChoiceArrayField(
                        base_field=models.CharField(
                            blank=True,
                            choices=[
                                (
                                    "Government commercial and contract management",
                                    "Commercial",
                                ),
                                ("Corporate finance profession", "Corp Finance"),
                                (
                                    "Counter-fraud standards and profession",
                                    "Counter Fraud",
                                ),
                                (
                                    "Digital, data and technology profession",
                                    "Digital Data Tech",
                                ),
                                ("Government communication service", "Gov Comms"),
                                ("Government economic service", "Gov Economics"),
                                ("Government finance profession", "Gov Finance"),
                                ("Government IT profession", "Gov It"),
                                (
                                    "Government knowledge and information management profession",
                                    "Gov Knowledge",
                                ),
                                ("Government legal service", "Gov Legal"),
                                (
                                    "Government occupational psychology profession",
                                    "Gov Occupational",
                                ),
                                (
                                    "Government operational research service",
                                    "Gov Operational",
                                ),
                                (
                                    "Government planning inspectors",
                                    "Gov Planning Inspectors",
                                ),
                                (
                                    "Government planning profession",
                                    "Gov Planning Profession",
                                ),
                                ("Government property profession", "Gov Property"),
                                ("Government security profession", "Gov Security"),
                                (
                                    "Government science and engineering profession",
                                    "Gov Science",
                                ),
                                ("Government social research profession", "Gov Social"),
                                (
                                    "Government statistical service profession",
                                    "Gov Statistical",
                                ),
                                ("Government tax profession", "Gov Tax"),
                                ("Government veterinary profession", "Gov Vet"),
                                ("Human resources profession", "Human Resources"),
                                ("Intelligence analysis", "Intelligence Analysis"),
                                ("Internal audit profession", "Internal Audit"),
                                ("Medical profession", "Medical Profession"),
                                (
                                    "Operational delivery profession",
                                    "Operation Delivery",
                                ),
                                ("Policy profession", "Policy Profiession"),
                                ("Procurement profession", "Procurement Profession"),
                                ("Project delivery profession", "Project Delivery"),
                                (
                                    "International trade profession",
                                    "International Trade",
                                ),
                            ],
                            help_text="Select all that apply",
                            verbose_name="What professions do you belong to?",
                        ),
                        size=None,
                    ),
                ),
                (
                    "additional_roles",
                    core.models.ChoiceArrayField(
                        base_field=models.CharField(
                            blank=True,
                            choices=[
                                ("Fire warden", "Fire Warden"),
                                ("First aider", "First Aider"),
                                (
                                    "Mental health first aider",
                                    "Mental Health First Aider",
                                ),
                                ("Mentor", "Mentor"),
                                ("Network lead", "Network Lead"),
                                ("Network deputy lead", "Network Deputy Lead"),
                                ("Cirrus champion", "Cirrus Champion"),
                                (
                                    "Health & wellbeing champion",
                                    "Health Wellbeing Champion",
                                ),
                                ("Fast stream rep", "Fast Stream Rep"),
                                ("Overseas staff rep", "Overseas Staff Rep"),
                                ("Digital champion", "Digital Champion"),
                                ("Information manager", "Information Manager"),
                                (
                                    "Independent panel member",
                                    "Independent Panel Member",
                                ),
                                (
                                    "Divisional security coordinator",
                                    "Divisional Security Coordinator",
                                ),
                                ("DDaT champion", "Ddat Champion"),
                                ("Honours champion", "Honours Champion"),
                            ],
                            help_text="Select all that apply",
                            verbose_name="Do you have any additional roles or responsibilities?",
                        ),
                        size=None,
                    ),
                ),
                (
                    "other_additional_roles",
                    models.CharField(
                        blank=True,
                        help_text="Enter your roles or responsibilities. Use a comma to separate them.",
                        max_length=400,
                        null=True,
                        verbose_name="What other additional roles or responsibilities do you have?",
                    ),
                ),
                (
                    "key_skills",
                    core.models.ChoiceArrayField(
                        base_field=models.CharField(
                            blank=True,
                            choices=[
                                ("Asset management", "Asset Management"),
                                ("Assurance", "Assurance"),
                                ("Benefits realisation", "Benefits Realisation"),
                                ("Change management", "Change Management"),
                                ("Coaching", "Coaching"),
                                ("Commercial specialist", "Commercial Specialist"),
                                ("Commissioning", "Commissioning"),
                                ("Contract management", "Contract Management"),
                                ("Credit risk analysis", "Credit Risk Analysis"),
                                ("Customer service", "Customer Service"),
                                ("Digital", "Digital"),
                                (
                                    "Digital Workspace publisher",
                                    "Digital Workspace Publisher",
                                ),
                                ("Economist", "Economist"),
                                ("Financial reporting", "Financial Reporting"),
                                ("Graphic Design", "Graphic Design"),
                                ("HR", "Hr"),
                                ("Income generation", "Income Generation"),
                                ("Information management", "Information Management"),
                                ("Interviewing", "Interviewing"),
                                ("IT", "It"),
                                ("Law", "Law"),
                                ("Lean/ Six sigma", "Lean"),
                                ("Line management", "Line Management"),
                                ("Media trained", "Media Trained"),
                                ("Mentoring", "Mentoring"),
                                ("Policy design", "Policy Design"),
                                ("Policy implementation", "Policy Implementation"),
                                ("Presenting", "Presenting"),
                                ("Project delivery", "Project Delivery"),
                                ("Project management", "Project Management"),
                                ("Property / Estates", "Property Estates"),
                                ("Research - operational", "Research Operational"),
                                ("Research - economic", "Research Economic"),
                                ("Research - statistical", "Research Statistical"),
                                ("Research - social", "Research Social"),
                                ("Risk management", "Risk Management"),
                                ("Security", "Security"),
                                ("Service and process design", "Service Design"),
                                (
                                    "Skills and capability management",
                                    "Skills And Capability",
                                ),
                                ("Sponsorship and partnerships", "Sponsorship"),
                                ("Stakeholder management", "Stakeholder Management"),
                                ("Statistics", "Statistics"),
                                ("Strategy", "Strategy"),
                                ("Submission writing", "Submission Writing"),
                                ("Talent Management", "Talent Management"),
                                ("Tax", "Tax"),
                                ("Training", "Training"),
                                ("Underwriting", "Underwriting"),
                                ("User research", "User Research"),
                                ("Valuation", "Valution"),
                                (
                                    "Working with Devolved Administrations",
                                    "Working With Devolved Admin",
                                ),
                                ("Working with Ministers", "Working With Ministers"),
                                (
                                    "Working with other government departments",
                                    "Working With Govt Depts",
                                ),
                            ],
                            help_text="Select all that apply",
                            verbose_name="What are your skills?",
                        ),
                        size=None,
                    ),
                ),
                (
                    "other_key_skills",
                    models.CharField(
                        blank=True,
                        help_text="Enter your skills. Use a comma to separate them.",
                        max_length=700,
                        null=True,
                        verbose_name="What other skills do you have?",
                    ),
                ),
                (
                    "learning_interests",
                    core.models.ChoiceArrayField(
                        base_field=models.CharField(
                            blank=True,
                            choices=[
                                ("Work shadowing", "Shadowing"),
                                ("Mentoring", "Mentoring"),
                                ("Research", "Research"),
                                ("Overseas posts", "Overseas Posts"),
                                ("Secondment", "Secondment"),
                                ("Parliamentary work", "Parliamentary Work"),
                                ("Ministerial submissions", "Ministerial Submissions"),
                                ("Coding", "Coding"),
                            ],
                            help_text="Select all that apply",
                            verbose_name="What are your learning and development interests?",
                        ),
                        size=None,
                    ),
                ),
                (
                    "other_learning_interests",
                    models.CharField(
                        blank=True,
                        help_text="Enter your interests. Use a comma to separate them.",
                        max_length=255,
                        null=True,
                        verbose_name="What other learning and development interests do you have?",
                    ),
                ),
                (
                    "fluent_languages",
                    models.CharField(
                        blank=True,
                        help_text="Use a comma to separate the languages. For example: French, Polish, Ukrainian",
                        max_length=200,
                        null=True,
                        verbose_name="Which languages are you fluent in?",
                    ),
                ),
                (
                    "intermediate_languages",
                    models.CharField(
                        blank=True,
                        help_text="These are languages you speak and write but are not fluent in",
                        max_length=200,
                        null=True,
                        verbose_name="Which other languages do you speak?",
                    ),
                ),
                (
                    "previous_experience",
                    models.TextField(
                        blank=True,
                        help_text="List where you have worked before your current role",
                        null=True,
                        verbose_name="Previous positions I have held",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("became_inactive", models.DateTimeField(blank=True, null=True)),
                ("edited_or_confirmed_at", models.DateTimeField()),
                ("login_count", models.IntegerField(default=0)),
                ("profile_completion", models.IntegerField(default=0)),
                (
                    "ical_token",
                    models.CharField(
                        blank=True,
                        max_length=80,
                        null=True,
                        verbose_name="Individual token for iCal feeds",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default="CTHMTC00260",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="profiles.country",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="profiles.peoplefinderprofile",
                    ),
                ),
                (
                    "uk_office_location",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Your base location as per your contract",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="profiles.ukstafflocation",
                        verbose_name="What is your office location?",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical people finder profile",
                "verbose_name_plural": "historical people finder profiles",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="PeopleFinderProfileTeam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "job_title",
                    models.CharField(
                        help_text="Enter your role in this team", max_length=255
                    ),
                ),
                ("head_of_team", models.BooleanField(default=False)),
                ("leaders_position", models.SmallIntegerField(null=True)),
                (
                    "peoplefinder_profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="roles",
                        to="profiles.peoplefinderprofile",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="peoplefinder_members",
                        to="profiles.peoplefinderteam",
                    ),
                ),
            ],
            options={
                "constraints": [
                    models.UniqueConstraint(
                        fields=(
                            "peoplefinder_profile",
                            "team",
                            "job_title",
                            "head_of_team",
                        ),
                        name="unique_team_member",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="PeopleFinderTeamTree",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("depth", models.SmallIntegerField()),
                (
                    "child",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="profiles.peoplefinderteam",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parents",
                        to="profiles.peoplefinderteam",
                    ),
                ),
            ],
            options={
                "unique_together": {("parent", "child")},
            },
        ),
        migrations.AddIndex(
            model_name="peoplefinderprofile",
            index=models.Index(fields=["slug"], name="profiles_pe_slug_2944f1_idx"),
        ),
        migrations.AddConstraint(
            model_name="peoplefinderprofile",
            constraint=models.CheckConstraint(
                condition=models.Q(("id", models.F("manager")), _negated=True),
                name="manager_cannot_be_self",
            ),
        ),
    ]
