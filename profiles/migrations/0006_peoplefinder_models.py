# Generated by Django 5.1.5 on 2025-01-24 14:56

import django.db.models.deletion
import django_chunk_upload_handlers.clam_av
import profiles.models.peoplefinder
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("profiles", "0005_peoplefinder_generic_dependencies"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AdditionalRole",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=40)),
                ("name", models.CharField(max_length=50)),
            ],
            options={
                "ordering": ["name"],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("code",), name="unique_additional_role_code"
                    ),
                    models.UniqueConstraint(
                        fields=("name",), name="unique_additional_role_name"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="HistoricalPeopleFinderTeamTree",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("depth", models.SmallIntegerField()),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "child",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="profiles.team",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="profiles.team",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical people finder team tree",
                "verbose_name_plural": "historical people finder team trees",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="LearningInterest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=30)),
                ("name", models.CharField(max_length=50)),
            ],
            options={
                "ordering": ["name"],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("code",), name="unique_learning_interest_code"
                    ),
                    models.UniqueConstraint(
                        fields=("name",), name="unique_learning_interest_name"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PeopleFinderProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "slug",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "first_name",
                    models.CharField(
                        help_text="If you enter a preferred name below, this name will be hidden to others",
                        max_length=200,
                    ),
                ),
                (
                    "preferred_first_name",
                    models.CharField(
                        blank=True,
                        help_text="This name appears on your profile. Colleagues can search for you using either of your first names",
                        max_length=200,
                        null=True,
                    ),
                ),
                ("last_name", models.CharField(max_length=200)),
                ("pronouns", models.CharField(blank=True, max_length=40, null=True)),
                (
                    "name_pronunciation",
                    models.CharField(
                        blank=True,
                        help_text="A phonetic representation of your name<br><a class='govuk-link' href='/news-and-views/say-my-name/' target='_blank' rel='noreferrer'>Tips for writing your name phonetically</a>",
                        max_length=200,
                        null=True,
                        verbose_name="How to pronounce your full name",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="We will send Digital Workspace notifications to this email",
                        max_length=254,
                        verbose_name="How we contact you",
                    ),
                ),
                (
                    "contact_email",
                    models.EmailField(
                        blank=True,
                        help_text="The work email you want people to contact you on",
                        max_length=254,
                        null=True,
                        verbose_name="Email address",
                    ),
                ),
                (
                    "primary_phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Enter the country's dialling code in place of the first 0. The UK's dialling code is +44.",
                        max_length=42,
                        null=True,
                        verbose_name="Phone number",
                    ),
                ),
                (
                    "secondary_phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Enter the country's dialling code in place of the first 0. The UK's dialling code is +44.",
                        max_length=160,
                        null=True,
                        verbose_name="Alternative phone number",
                    ),
                ),
                (
                    "photo",
                    models.ImageField(
                        blank=True,
                        max_length=255,
                        null=True,
                        upload_to=profiles.models.peoplefinder.person_photo_path,
                        validators=[
                            django_chunk_upload_handlers.clam_av.validate_virus_check_result
                        ],
                    ),
                ),
                (
                    "photo_small",
                    models.ImageField(
                        blank=True,
                        max_length=255,
                        null=True,
                        upload_to=profiles.models.peoplefinder.person_photo_small_path,
                        validators=[
                            django_chunk_upload_handlers.clam_av.validate_virus_check_result
                        ],
                    ),
                ),
                (
                    "do_not_work_for_dit",
                    models.BooleanField(
                        default=False,
                        verbose_name="My manager is not listed because I do not work for DBT",
                    ),
                ),
                (
                    "remote_working",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("office_worker", "I work primarily from the office"),
                            (
                                "remote_worker",
                                "I work primarily from home (remote worker)",
                            ),
                            ("split", "I split my time between home and the office"),
                        ],
                        max_length=80,
                        null=True,
                        verbose_name="Where do you usually work?",
                    ),
                ),
                (
                    "usual_office_days",
                    models.CharField(
                        blank=True,
                        help_text="For example: I usually come in on Mondays and Wednesdays",
                        max_length=200,
                        null=True,
                        verbose_name="What days do you usually come in to the office?",
                    ),
                ),
                (
                    "location_in_building",
                    models.CharField(
                        blank=True,
                        help_text="If you sit in a particular area, you can let colleagues know here",
                        max_length=130,
                        null=True,
                        verbose_name="Location in the building",
                    ),
                ),
                (
                    "international_building",
                    models.CharField(
                        blank=True,
                        help_text="Complete if you work outside the UK",
                        max_length=110,
                        null=True,
                        verbose_name="International location",
                    ),
                ),
                (
                    "other_additional_roles",
                    models.CharField(
                        blank=True,
                        help_text="Enter your roles or responsibilities. Use a comma to separate them.",
                        max_length=400,
                        null=True,
                        verbose_name="What other additional roles or responsibilities do you have?",
                    ),
                ),
                (
                    "other_key_skills",
                    models.CharField(
                        blank=True,
                        help_text="Enter your skills. Use a comma to separate them.",
                        max_length=700,
                        null=True,
                        verbose_name="What other skills do you have?",
                    ),
                ),
                (
                    "other_learning_interests",
                    models.CharField(
                        blank=True,
                        help_text="Enter your interests. Use a comma to separate them.",
                        max_length=255,
                        null=True,
                        verbose_name="What other learning and development interests do you have?",
                    ),
                ),
                (
                    "fluent_languages",
                    models.CharField(
                        blank=True,
                        help_text="Use a comma to separate the languages. For example: French, Polish, Ukrainian",
                        max_length=200,
                        null=True,
                        verbose_name="Which languages are you fluent in?",
                    ),
                ),
                (
                    "intermediate_languages",
                    models.CharField(
                        blank=True,
                        help_text="These are languages you speak and write but are not fluent in",
                        max_length=200,
                        null=True,
                        verbose_name="Which other languages do you speak?",
                    ),
                ),
                (
                    "previous_experience",
                    models.TextField(
                        blank=True,
                        help_text="List where you have worked before your current role",
                        null=True,
                        verbose_name="Previous positions I have held",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("became_inactive", models.DateTimeField(blank=True, null=True)),
                ("login_count", models.IntegerField(default=0)),
                ("profile_completion", models.IntegerField(default=0)),
                (
                    "ical_token",
                    models.CharField(
                        blank=True,
                        max_length=80,
                        null=True,
                        verbose_name="Individual token for iCal feeds",
                    ),
                ),
                (
                    "additional_roles",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Select all that apply",
                        related_name="+",
                        to="profiles.additionalrole",
                        verbose_name="Do you have any additional roles or responsibilities?",
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        default="CTHMTC00260",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="profiles.country",
                    ),
                ),
                (
                    "grade",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="profiles.grade",
                    ),
                ),
                (
                    "key_skills",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Select all that apply",
                        related_name="+",
                        to="profiles.keyskill",
                        verbose_name="What are your skills?",
                    ),
                ),
                (
                    "learning_interests",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Select all that apply",
                        related_name="+",
                        to="profiles.learninginterest",
                        verbose_name="What are your learning and development interests?",
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="direct_reports",
                        to="profiles.peoplefinderprofile",
                    ),
                ),
                (
                    "professions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Select all that apply",
                        related_name="+",
                        to="profiles.profession",
                        verbose_name="What professions do you belong to?",
                    ),
                ),
                (
                    "uk_office_location",
                    models.ForeignKey(
                        blank=True,
                        help_text="Your base location as per your contract",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to="profiles.ukstafflocation",
                        verbose_name="What is your office location?",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "workdays",
                    models.ManyToManyField(
                        blank=True,
                        related_name="+",
                        to="profiles.workday",
                        verbose_name="Which days do you usually work?",
                    ),
                ),
            ],
            options={
                "permissions": [
                    ("can_view_inactive_profiles", "Can view inactive profiles")
                ],
            },
        ),
        migrations.CreateModel(
            name="HistoricalPeopleFinderProfileTeam",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "job_title",
                    models.CharField(
                        help_text="Enter your role in this team", max_length=255
                    ),
                ),
                ("head_of_team", models.BooleanField(default=False)),
                ("leaders_position", models.SmallIntegerField(null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="profiles.team",
                    ),
                ),
                (
                    "peoplefinder_profile",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="profiles.peoplefinderprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical people finder profile team",
                "verbose_name_plural": "historical people finder profile teams",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPeopleFinderProfile",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                (
                    "slug",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "first_name",
                    models.CharField(
                        help_text="If you enter a preferred name below, this name will be hidden to others",
                        max_length=200,
                    ),
                ),
                (
                    "preferred_first_name",
                    models.CharField(
                        blank=True,
                        help_text="This name appears on your profile. Colleagues can search for you using either of your first names",
                        max_length=200,
                        null=True,
                    ),
                ),
                ("last_name", models.CharField(max_length=200)),
                ("pronouns", models.CharField(blank=True, max_length=40, null=True)),
                (
                    "name_pronunciation",
                    models.CharField(
                        blank=True,
                        help_text="A phonetic representation of your name<br><a class='govuk-link' href='/news-and-views/say-my-name/' target='_blank' rel='noreferrer'>Tips for writing your name phonetically</a>",
                        max_length=200,
                        null=True,
                        verbose_name="How to pronounce your full name",
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="We will send Digital Workspace notifications to this email",
                        max_length=254,
                        verbose_name="How we contact you",
                    ),
                ),
                (
                    "contact_email",
                    models.EmailField(
                        blank=True,
                        help_text="The work email you want people to contact you on",
                        max_length=254,
                        null=True,
                        verbose_name="Email address",
                    ),
                ),
                (
                    "primary_phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Enter the country's dialling code in place of the first 0. The UK's dialling code is +44.",
                        max_length=42,
                        null=True,
                        verbose_name="Phone number",
                    ),
                ),
                (
                    "secondary_phone_number",
                    models.CharField(
                        blank=True,
                        help_text="Enter the country's dialling code in place of the first 0. The UK's dialling code is +44.",
                        max_length=160,
                        null=True,
                        verbose_name="Alternative phone number",
                    ),
                ),
                (
                    "photo",
                    models.TextField(
                        blank=True,
                        max_length=255,
                        null=True,
                        validators=[
                            django_chunk_upload_handlers.clam_av.validate_virus_check_result
                        ],
                    ),
                ),
                (
                    "photo_small",
                    models.TextField(
                        blank=True,
                        max_length=255,
                        null=True,
                        validators=[
                            django_chunk_upload_handlers.clam_av.validate_virus_check_result
                        ],
                    ),
                ),
                (
                    "do_not_work_for_dit",
                    models.BooleanField(
                        default=False,
                        verbose_name="My manager is not listed because I do not work for DBT",
                    ),
                ),
                (
                    "remote_working",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("office_worker", "I work primarily from the office"),
                            (
                                "remote_worker",
                                "I work primarily from home (remote worker)",
                            ),
                            ("split", "I split my time between home and the office"),
                        ],
                        max_length=80,
                        null=True,
                        verbose_name="Where do you usually work?",
                    ),
                ),
                (
                    "usual_office_days",
                    models.CharField(
                        blank=True,
                        help_text="For example: I usually come in on Mondays and Wednesdays",
                        max_length=200,
                        null=True,
                        verbose_name="What days do you usually come in to the office?",
                    ),
                ),
                (
                    "location_in_building",
                    models.CharField(
                        blank=True,
                        help_text="If you sit in a particular area, you can let colleagues know here",
                        max_length=130,
                        null=True,
                        verbose_name="Location in the building",
                    ),
                ),
                (
                    "international_building",
                    models.CharField(
                        blank=True,
                        help_text="Complete if you work outside the UK",
                        max_length=110,
                        null=True,
                        verbose_name="International location",
                    ),
                ),
                (
                    "other_additional_roles",
                    models.CharField(
                        blank=True,
                        help_text="Enter your roles or responsibilities. Use a comma to separate them.",
                        max_length=400,
                        null=True,
                        verbose_name="What other additional roles or responsibilities do you have?",
                    ),
                ),
                (
                    "other_key_skills",
                    models.CharField(
                        blank=True,
                        help_text="Enter your skills. Use a comma to separate them.",
                        max_length=700,
                        null=True,
                        verbose_name="What other skills do you have?",
                    ),
                ),
                (
                    "other_learning_interests",
                    models.CharField(
                        blank=True,
                        help_text="Enter your interests. Use a comma to separate them.",
                        max_length=255,
                        null=True,
                        verbose_name="What other learning and development interests do you have?",
                    ),
                ),
                (
                    "fluent_languages",
                    models.CharField(
                        blank=True,
                        help_text="Use a comma to separate the languages. For example: French, Polish, Ukrainian",
                        max_length=200,
                        null=True,
                        verbose_name="Which languages are you fluent in?",
                    ),
                ),
                (
                    "intermediate_languages",
                    models.CharField(
                        blank=True,
                        help_text="These are languages you speak and write but are not fluent in",
                        max_length=200,
                        null=True,
                        verbose_name="Which other languages do you speak?",
                    ),
                ),
                (
                    "previous_experience",
                    models.TextField(
                        blank=True,
                        help_text="List where you have worked before your current role",
                        null=True,
                        verbose_name="Previous positions I have held",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("became_inactive", models.DateTimeField(blank=True, null=True)),
                ("login_count", models.IntegerField(default=0)),
                ("profile_completion", models.IntegerField(default=0)),
                (
                    "ical_token",
                    models.CharField(
                        blank=True,
                        max_length=80,
                        null=True,
                        verbose_name="Individual token for iCal feeds",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "country",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        default="CTHMTC00260",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="profiles.country",
                    ),
                ),
                (
                    "grade",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="profiles.grade",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "uk_office_location",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        help_text="Your base location as per your contract",
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="profiles.ukstafflocation",
                        verbose_name="What is your office location?",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "manager",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="profiles.peoplefinderprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical people finder profile",
                "verbose_name_plural": "historical people finder profiles",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="PeopleFinderProfileTeam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "job_title",
                    models.CharField(
                        help_text="Enter your role in this team", max_length=255
                    ),
                ),
                ("head_of_team", models.BooleanField(default=False)),
                ("leaders_position", models.SmallIntegerField(null=True)),
                (
                    "peoplefinder_profile",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="roles",
                        to="profiles.peoplefinderprofile",
                    ),
                ),
                (
                    "team",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="peoplefinder_members",
                        to="profiles.team",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PeopleFinderTeamTree",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("depth", models.SmallIntegerField()),
                (
                    "child",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="profiles.team",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="parents",
                        to="profiles.team",
                    ),
                ),
            ],
        ),
        migrations.AddConstraint(
            model_name="peoplefinderprofile",
            constraint=models.CheckConstraint(
                condition=models.Q(("id", models.F("manager")), _negated=True),
                name="manager_cannot_be_self",
            ),
        ),
        migrations.AddConstraint(
            model_name="peoplefinderprofileteam",
            constraint=models.UniqueConstraint(
                fields=("peoplefinder_profile", "team", "job_title", "head_of_team"),
                name="unique_team_member",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="peoplefinderteamtree",
            unique_together={("parent", "child")},
        ),
    ]
